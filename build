#! /usr/bin/make -f

programs = bin/test

all: $(programs)

src := $(dir $(firstword $(MAKEFILE_LIST)))

XXHASH_CFLAGS := $(shell exec pkg-config --cflags libxxhash)
XXHASH_LIBS := $(shell exec pkg-config --libs libxxhash)

#.ONESHELL:
#ifeq (,$(findstring s,$(MAKEFLAGS)))
#.SHELLFLAGS = -exc
#.SILENT:
#else
#.SHELLFLAGS = -ec
#endif

CC = gcc
OPTIMIZE = -O3
#SPECIALIZE = -march=native
WERROR = -Werror
FILE_OFFSET_BITS = 64
D_FILE_OFFSET_BITS = -D_FILE_OFFSET_BITS=$(FILE_OFFSET_BITS)
NDEBUG = -DNDEBUG
STANDARD = -std=c99
LTO = -flto=auto
BASIC = -pipe -D_GNU_SOURCE $(D_FILE_OFFSET_BITS) -DHAVE_BUILTIN_CLZLL $(NDEBUG) -g -Wall $(WERROR) $(LTO)
STRICT = -pedantic-errors -Wextra
STRICT += -Wno-missing-field-initializers -Wno-unused-parameter
STRICT += -Waggregate-return -Wbad-function-cast -Wcast-align -Wcast-qual -Wconversion -Winline -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wold-style-definition -Wpointer-arith -Wredundant-decls -Wshadow -Wstack-protector -Wstrict-prototypes -Wundef -Wwrite-strings
EXTRA_STRICT = $(STRICT) -Wunreachable-code
STRIP = -s
INCLUDE =

CFLAGS = $(STANDARD) $(OPTIMIZE) $(SPECIALIZE) $(INCLUDE) $(BASIC) $(EXTRA_STRICT) $(EXTRA_CFLAGS) $(XXHASH_CFLAGS)
LDFLAGS = -pipe $(OPTIMIZE) $(LTO) $(STRIP)
LIBS = $(XXHASH_LIBS) -lm

bin/test_EXTRA_OBJECTS = \
	lib/common.o \
	lib/error.o \
	lib/io.o \
	lib/reader.o \
	lib/reader/parse.o \
	lib/writer.o \
	lib/writer/buffer.o \
	lib/writer/bytes.o \
	lib/writer/constants.o \
	lib/writer/container.o \
	lib/writer/decimal.o \
	lib/writer/format.o \
	lib/writer/string.o

define programrule
$1_OBJECTS ?= $1.o
$1_LDFLAGS ?= $$(LDFLAGS)
$1_LIBS ?= $$(LIBS)
objects += $$($1_OBJECTS) $$($1_EXTRA_OBJECTS)
dirs += $(patsubst %/,%,$(dir $1))

$1: $$(sort $$($1_OBJECTS) $$($1_EXTRA_OBJECTS)) | $(patsubst %/,%,$(dir $1))
	exec $$(strip $(CC) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$^ -o $$@ $$($1_LIBS) $$($1_EXTRA_LIBS))
endef

$(foreach prog,$(programs),$(eval $(call programrule,$(prog))))

objects := $(sort $(objects))

define objectrule
$1_CFLAGS ?= $$(CFLAGS)
dirs += $(patsubst %/,%,$(dir $1))

-include $1.d

$1.o: $$(src)$1.c $$($1_EXTRA_DEPS) | $(patsubst %/,%,$(dir $1))
	exec $$(strip $(CC) $$($1_CFLAGS) $$($1_EXTRA_CFLAGS) -MMD -c $$< -o $$@)
endef

$(foreach obj,$(objects:.o=),$(eval $(call objectrule,$(obj))))

generated = $(sort $(objects) $(objects:.o=.d) $(programs))

$(sort $(dirs)):
	exec mkdir $@

.PHONY: all clean install recursive

clean:
	exec rm -f $(generated)
