#! /usr/bin/make -f

programs = bin/unit-test bin/bijson

all: $(programs)

src := $(dir $(firstword $(MAKEFILE_LIST)))

#.ONESHELL:
#ifeq (,$(findstring s,$(MAKEFLAGS)))
#.SHELLFLAGS = -exc
#.SILENT:
#else
#.SHELLFLAGS = -ec
#endif

CC = gcc
OPTIMIZE = -O3
#SPECIALIZE = -march=native
WERROR = -Werror
FILE_OFFSET_BITS = 64
D_FILE_OFFSET_BITS = -D_FILE_OFFSET_BITS=$(FILE_OFFSET_BITS)
NDEBUG = -DNDEBUG
STANDARD = -std=c99
LTO = -flto=auto
BASIC = -pipe -D_GNU_SOURCE $(D_FILE_OFFSET_BITS) -DHAVE_BUILTIN_CLZLL $(NDEBUG) -g $(WERROR) $(LTO)
STRICT = -Wall -pedantic -pedantic-errors -Wextra
STRICT += -Wbad-function-cast
STRICT += -Wcast-align
STRICT += -Wcast-qual
STRICT += -Wconversion
STRICT += -Wmissing-declarations
STRICT += -Wmissing-format-attribute
STRICT += -Wmissing-noreturn
STRICT += -Wmissing-prototypes
STRICT += -Wnested-externs
STRICT += -Wold-style-definition
STRICT += -Wpointer-arith
STRICT += -Wredundant-decls
STRICT += -Wshadow
STRICT += -Wstack-protector
STRICT += -Wstrict-prototypes
STRICT += -Wsuggest-attribute=cold
STRICT += -Wsuggest-attribute=const
STRICT += -Wsuggest-attribute=format
STRICT += -Wsuggest-attribute=malloc
STRICT += -Wsuggest-attribute=noreturn
STRICT += -Wsuggest-attribute=pure
STRICT += -Wundef
STRICT += -Wunreachable-code
STRICT += -Wwrite-strings
STRICT += -Wno-missing-field-initializers
STRICT += -Wno-unused-parameter
#STRICT += -Waggregate-return
STRIP = -s
INCLUDE =

CFLAGS = $(STANDARD) $(OPTIMIZE) $(SPECIALIZE) $(INCLUDE) $(BASIC) $(STRICT) $(EXTRA_STRICT) $(EXTRA_CFLAGS)
LDFLAGS = -pipe $(OPTIMIZE) $(LTO) $(STRIP)
LIBS = -lm

bin/unit-test_EXTRA_OBJECTS = lib/common.o lib/error.o

bin/bijson_EXTRA_OBJECTS = \
	lib/common.o \
	lib/error.o \
	lib/io.o \
	lib/reader.o \
	lib/reader/array.o \
	lib/reader/decimal.o \
	lib/reader/object.o \
	lib/reader/object/index.o \
	lib/reader/object/key.o \
	lib/reader/object/key_range.o \
	lib/reader/string.o \
	lib/writer.o \
	lib/writer/array.o \
	lib/writer/buffer.o \
	lib/writer/bytes.o \
	lib/writer/constants.o \
	lib/writer/container.o \
	lib/writer/decimal.o \
	lib/writer/object.o \
	lib/writer/parse.o \
	lib/writer/string.o

define programrule
$1_OBJECTS ?= $1.o
$1_LDFLAGS ?= $$(LDFLAGS)
$1_LIBS ?= $$(LIBS)
objects += $$($1_OBJECTS) $$($1_EXTRA_OBJECTS)
dirs += $(patsubst %/,%,$(dir $1))

$1: $$(sort $$($1_OBJECTS) $$($1_EXTRA_OBJECTS)) | $(patsubst %/,%,$(dir $1))
	exec $$(strip $(CC) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$^ -o $$@ $$($1_LIBS) $$($1_EXTRA_LIBS))
endef

$(foreach prog,$(programs),$(eval $(call programrule,$(prog))))

objects := $(sort $(objects))

define objectrule
$1_CFLAGS ?= $$(CFLAGS)
dirs += $(patsubst %/,%,$(dir $1))

-include $1.d

$1.o: $$(src)$1.c $$($1_EXTRA_DEPS) | $(patsubst %/,%,$(dir $1))
	exec $$(strip $(CC) $$($1_CFLAGS) $$($1_EXTRA_CFLAGS) -MMD -c $$< -o $$@)
endef

$(foreach obj,$(objects:.o=),$(eval $(call objectrule,$(obj))))

generated = $(sort $(objects) $(objects:.o=.d) $(programs))

$(sort $(dirs)):
	exec mkdir $@

.PHONY: all clean install recursive

clean:
	exec rm -f $(generated)
