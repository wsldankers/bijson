define programrule
$1_OBJECTS ?= $1.o
$1_LDFLAGS ?= $$(LDFLAGS)
$1_LIBS ?= $$(LIBS)
objects += $$($1_OBJECTS) $$($1_EXTRA_OBJECTS)

$1: $$(sort $$($1_OBJECTS) $$($1_EXTRA_OBJECTS))
	exec $$(strip $(CC) $$($1_LDFLAGS) $$($1_EXTRA_LDFLAGS) $$^ -o $$@ $$($1_LIBS) $$($1_EXTRA_LIBS))
endef

$(foreach prog,$(programs),$(eval $(call programrule,$(prog))))

objects := $(sort $(objects))

define objectrule
$1_CFLAGS ?= $$(CFLAGS)

-include $1.d

$1.o: $1.c $$($1_EXTRA_DEPS)
	exec $$(strip $(CC) $$($1_CFLAGS) $$($1_EXTRA_CFLAGS) -MMD -c $$< -o $$@)
endef

$(foreach obj,$(objects:.o=),$(eval $(call objectrule,$(obj))))

generated = $(sort $(objects) $(objects:.o=.d) $(programs))

.PHONY: all clean install recursive
